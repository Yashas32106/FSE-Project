#!/usr/bin/env python3

import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BOARD)

import time

TRIG = 11
ECHO = 12
BuzzerPin = 13
InfaredPin = 18
VibratorPin = 31

def setup():
    GPIO.setmode(GPIO.BOARD)
    # Setup for ultrasonic sensor
    GPIO.setup(TRIG, GPIO.OUT)
    GPIO.setup(ECHO, GPIO.IN)
    
    # Setup for buzzer
    GPIO.setup(BuzzerPin, GPIO.OUT)
    GPIO.output(BuzzerPin, GPIO.HIGH)

    #Setup for Vibrator
    GPIO.setup(VibratorPin, GPIO.OUT)
    GPIO.output(VibratorPin, GPIO.HIGH)

    #Setup for Infared
    GPIO.setup(InfaredPin, GPIO.IN)

def distance():
    GPIO.output(TRIG, 0)
    time.sleep(0.000002)
    GPIO.output(TRIG, 1)
    time.sleep(0.00001)
    GPIO.output(TRIG, 0)

    while GPIO.input(ECHO) == 0:
        a = 0
    time1 = time.time()
    while GPIO.input(ECHO) == 1:
        a = 1
    time2 = time.time()

    during = time2 - time1
    return during * 340 / 2 * 100

def buzzer_on():
    GPIO.output(BuzzerPin, GPIO.LOW)

def buzzer_off():
    GPIO.output(BuzzerPin, GPIO.HIGH)

def beep(duration):
    buzzer_on()
    time.sleep(duration)
    buzzer_off()
    time.sleep(duration)


def vibrator_on():
    GPIO.output(VibratorPin, GPIO.HIGH)

def vibrator_off():
    GPIO.output(VibratorPin, GPIO.LOW)

def vibrator(duration):
    vibrator_on()
    time.sleep(duration)
    vibrator_off()
    time.sleep(duration)


'''
def loop():
    while True:
        dis = distance()
        print(dis, 'cm')
        time.sleep(0.3)

# if the object is within 5 cm, buzz constantly
        if dis < 50: 
            vibrator_interval = 1
            vibrator(vibrator_interval)			
# if the object is within 30 cm
        elif dis < 100:  
# decrease beep interval as object gets closer
            vibrator_interval = 3
 # just an example scaling
            vibrator(vibrator_interval)
        elif dis < 200:
            vibrator_interval = 5
            vibrator(vibrator_interval)
        else:
            vibrator_off()	

        time.sleep(0.1)
'''

def loop():
    vibrator_off()
    while True:
        motion = GPIO.input(InfaredPin)
        print(motion)
        time.sleep(.1)
        
        if motion == 1: 
            buzzer_on()
        else:
            buzzer_off()

        time.sleep(0.3)


def destroy():
    GPIO.cleanup()
    
if __name__ == "__main__":
    setup()
    vibrator_off()
    try:
        loop()
    except KeyboardInterrupt:
        destroy()

